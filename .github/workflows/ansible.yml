name: Publish

on:
  push:
    paths:
      - '.github/workflows/ansible.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  ansible:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - run: curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
      - run: echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
      - run: curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
      - run: echo "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflared.list
      - run: sudo add-apt-repository --yes --update ppa:ansible/ansible
      - run: sudo apt update
      - uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: ansible cloudflare-warp cloudflared

      - run: sudo mkdir -p /var/lib/cloudflare-warp
      - name: Create XML file
        run: |
          sudo bash -c 'cat > /var/lib/cloudflare-warp/mdm.xml << EOF
          <dict>
            <key>organization</key>
            <string>${{ vars.CF_ZT_ST_ORG }}</string>
            <key>auth_client_id</key>
            <string>${{ vars.CF_ZT_ST_ID }}</string>
            <key>auth_client_secret</key>
            <string>${{ secrets.CF_ZT_ST_SECRET }}</string>
          </dict>
          EOF'
      - run: sudo systemctl start warp-svc
      - run: warp-cli --accept-tos register
      - run: warp-cli --accept-tos connect
      - run: warp-cli --accept-tos account

      # - run: warp-diag
      #   if: ${{ always() }}
      # - uses: actions/upload-artifact@v3
      #   with:
      #     path: warp-debugging-info*
      #     retention-days: 1
      #     if-no-files-found: error

      # - run: cloudflared access ssh-config --hostname nas-ssh.demosjarco.dev --short-lived-cert
      - run: cloudflared access ssh-config --hostname nas-ssh.demosjarco.dev
      - name: Start SSH agent
        run: ssh-agent -a ${{ runner.temp }}/ssh_agent.sock
      - name: Add SSH keys
        run: |
          echo "${{ secrets.PK_NAS2 }}" | ssh-add -t 15m -
        env:
          SSH_AUTH_SOCK: ${{ runner.temp }}/ssh_agent.sock
      - run: ssh overmind@nas-ssh.demosjarco.dev 'whoami; exit'
        env:
          SSH_AUTH_SOCK: ${{ runner.temp }}/ssh_agent.sock

      - uses: actions/checkout@v3
      # - run: ansible-playbook -i hosts.yml playbooks/initial.yaml
      #   env:
      #     SSH_AUTH_SOCK: ${{ runner.temp }}/ssh_agent.sock

      - run: sudo rm -rfv /var/lib/cloudflare-warp/mdm.xml
        if: ${{ always() }}